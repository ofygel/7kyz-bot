import { Telegraf } from 'telegraf';

import type { BotContext, ClientOrderDraftState } from '../types';

const joinLines = (lines: Array<string | undefined>): string =>
  lines.filter((line): line is string => line !== undefined).join('\n');

const formatAddressLine = (
  label: string,
  location: ClientOrderDraftState['pickup'] | ClientOrderDraftState['dropoff'] | undefined,
): string | undefined => {
  if (!location?.address) {
    return undefined;
  }

  return `${label}: ${location.address}.`;
};

const CANCEL_HINT = '–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel.';

const buildDeliveryHelp = (draft: ClientOrderDraftState): string | undefined => {
  switch (draft.stage) {
    case 'collectingPickup':
      return joinLines([
        'üì¶ –û—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É.',
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É 2–ì–ò–° –Ω–∞ —Ç–æ—á–∫—É –∑–∞–±–æ—Ä–∞ –ø–æ—Å—ã–ª–∫–∏. –ù–∞–∂–º–∏—Ç–µ ¬´–û—Ç–∫—Ä—ã—Ç—å 2–ì–ò–°¬ª –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞ –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ.',
        '–ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–¥—Ä–µ—Å —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.',
        CANCEL_HINT,
      ]);
    case 'collectingDropoff':
      return joinLines([
        'üì¶ –û—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É.',
        formatAddressLine('üì¶ –ó–∞–±–æ—Ä', draft.pickup),
        '',
        '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É 2–ì–ò–° –Ω–∞ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏. –ú–æ–∂–Ω–æ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç—å 2–ì–ò–° —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–π –∞–¥—Ä–µ—Å.',
        CANCEL_HINT,
      ]);
    case 'collectingRecipientPhone':
      return joinLines([
        'üì¶ –û—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É.',
        formatAddressLine('üìÆ –î–æ—Å—Ç–∞–≤–∫–∞', draft.dropoff),
        '',
        '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX. –ï—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –≤—ã, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä.',
        CANCEL_HINT,
      ]);
    case 'collectingComment': {
      const details: Array<string | undefined> = [
        formatAddressLine('üì¶ –ó–∞–±–æ—Ä', draft.pickup),
        formatAddressLine('üìÆ –î–æ—Å—Ç–∞–≤–∫–∞', draft.dropoff),
        draft.recipientPhone ? `üìû –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ${draft.recipientPhone}.` : undefined,
      ];

      return joinLines([
        'üì¶ –û—Ñ–æ—Ä–º–ª—è–µ–º –¥–æ—Å—Ç–∞–≤–∫—É.',
        ...details,
        details.some((line) => line) ? '' : undefined,
        '–î–æ–±–∞–≤—å—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫—É—Ä—å–µ—Ä–∞:',
        '‚Ä¢ –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –∏–ª–∏ –¥–æ—Å—Ç–∞–≤–∏—Ç—å.',
        '‚Ä¢ –ö–æ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å –∏ –∫–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è.',
        '‚Ä¢ –ü–æ–¥—ä–µ–∑–¥, –∫–æ–¥ –¥–æ–º–æ—Ñ–æ–Ω–∞ –∏ –¥—Ä—É–≥–∏–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã.',
        CANCEL_HINT,
      ]);
    }
    case 'awaitingConfirmation':
      return joinLines([
        'üì¶ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏.',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.',
        '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –¥–µ—Ç–∞–ª–∏, –æ—Ç–º–µ–Ω–∏—Ç–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.',
      ]);
    case 'creatingOrder':
      return joinLines([
        '‚è≥ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫—É—Ä—å–µ—Ä–∞–º.',
        '–ú—ã —É–≤–µ–¥–æ–º–∏–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–º–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Å–≤—è–∑–∏.',
      ]);
    default:
      return undefined;
  }
};

const buildTaxiHelp = (draft: ClientOrderDraftState): string | undefined => {
  switch (draft.stage) {
    case 'collectingPickup':
      return joinLines([
        'üöï –û—Ñ–æ—Ä–º–ª—è–µ–º –ø–æ–µ–∑–¥–∫—É.',
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É 2–ì–ò–° –Ω–∞ —Ç–æ—á–∫—É –ø–æ–¥–∞—á–∏ —Ç–∞–∫—Å–∏. –ù–∞–∂–º–∏—Ç–µ ¬´–û—Ç–∫—Ä—ã—Ç—å 2–ì–ò–°¬ª –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ.',
        '–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.',
        CANCEL_HINT,
      ]);
    case 'collectingDropoff':
      return joinLines([
        'üöï –û—Ñ–æ—Ä–º–ª—è–µ–º –ø–æ–µ–∑–¥–∫—É.',
        formatAddressLine('üìç –ü–æ–¥–∞—á–∞', draft.pickup),
        '',
        '–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É 2–ì–ò–° –Ω–∞ –ø—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è. –ú–æ–∂–Ω–æ —Å–Ω–æ–≤–∞ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π –∏–ª–∏ –Ω–µ–¥–∞–≤–Ω–∏–º –∞–¥—Ä–µ—Å–æ–º.',
        CANCEL_HINT,
      ]);
    case 'collectingRecipientPhone':
      return joinLines([
        'üöï –û—Ñ–æ—Ä–º–ª—è–µ–º –ø–æ–µ–∑–¥–∫—É.',
        '–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX. –ï—Å–ª–∏ –≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–≤—è–∑–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä.',
        CANCEL_HINT,
      ]);
    case 'collectingComment': {
      const details: Array<string | undefined> = [
        formatAddressLine('üìç –ü–æ–¥–∞—á–∞', draft.pickup),
        formatAddressLine('üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ', draft.dropoff),
      ];

      return joinLines([
        'üöï –û—Ñ–æ—Ä–º–ª—è–µ–º –ø–æ–µ–∑–¥–∫—É.',
        ...details,
        details.some((line) => line) ? '' : undefined,
        '–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è:',
        '‚Ä¢ –ì–¥–µ –≤–∞—Å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –∏ –∫–∞–∫–∏–µ –µ—Å—Ç—å –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã.',
        '‚Ä¢ –°–∫–æ–ª—å–∫–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏–ª–∏ –±–∞–≥–∞–∂–∞.',
        '‚Ä¢ –ù—É–∂–Ω—ã –ª–∏ –æ—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ–µ–∑–¥–∫–∏.',
        CANCEL_HINT,
      ]);
    }
    case 'awaitingConfirmation':
      return joinLines([
        'üöï –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –ø–æ–µ–∑–¥–∫–∏.',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–µ–∑–¥–∫—É –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.',
        '–ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å–∞, –æ—Ç–º–µ–Ω–∏—Ç–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.',
      ]);
    case 'creatingOrder':
      return joinLines([
        '‚è≥ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–æ–¥–∏—Ç–µ–ª—è–º.',
        '–ú—ã –Ω–∞–ø–∏—à–µ–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–∏–º–µ—Ç –ø–æ–µ–∑–¥–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥ —Ä—É–∫–æ–π.',
      ]);
    default:
      return undefined;
  }
};

const buildOrderHelp = (ctx: BotContext): string | undefined => {
  const client = ctx.session?.client;
  if (!client) {
    return undefined;
  }

  const deliveryHelp = buildDeliveryHelp(client.delivery);
  if (deliveryHelp) {
    return deliveryHelp;
  }

  const taxiHelp = buildTaxiHelp(client.taxi);
  if (taxiHelp) {
    return taxiHelp;
  }

  return undefined;
};

const buildSupportHelp = (ctx: BotContext): string | undefined => {
  if (ctx.session?.support?.status !== 'awaiting_message') {
    return undefined;
  }

  return joinLines([
    'üÜò –í—ã –Ω–∞ —à–∞–≥–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
    '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.',
    '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.',
  ]);
};

const buildExecutorHelp = (ctx: BotContext): string | undefined => {
  const executor = ctx.session?.executor;
  if (!executor || !executor.awaitingRoleSelection) {
    return undefined;
  }

  const stage = executor.roleSelectionStage ?? 'role';

  switch (stage) {
    case 'role':
      return joinLines([
        '–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ä–æ–ª—å –≤ —Å–µ—Ä–≤–∏—Å–µ.',
        '–ù–∞–∂–º–∏—Ç–µ ¬´–ö–ª–∏–µ–Ω—Ç¬ª –∏–ª–∏ ¬´–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å¬ª –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –≤–∏–¥–Ω–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.',
      ]);
    case 'executorKind':
      return joinLines([
        '–í—ã–±–∏—Ä–∞–µ—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ ¬´–ö—É—Ä—å–µ—Ä¬ª –∏–ª–∏ ¬´–í–æ–¥–∏—Ç–µ–ª—å¬ª –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ö–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª –≤–µ—Ä–Ω—ë—Ç –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏.',
      ]);
    case 'city':
      return joinLines([
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤.',
        '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /city, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –µ–≥–æ.',
      ]);
    default:
      return joinLines([
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤—ã–±–æ—Ä —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ /start ‚Äî —Å–ª–µ–¥—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.',
      ]);
  }
};

const GENERAL_HELP_TEXT = joinLines([
  '‚ÑπÔ∏è –ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É –∏ –ø–æ–µ–∑–¥–∫—É.',
  '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.',
  '–ö–æ–º–∞–Ω–¥—ã: /city ‚Äî —Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥, /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É, /start ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.',
  '–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç ¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª –≤ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.',
]);

export const buildHelpMessage = (ctx: BotContext): string => {
  return (
    buildOrderHelp(ctx)
    ?? buildSupportHelp(ctx)
    ?? buildExecutorHelp(ctx)
    ?? GENERAL_HELP_TEXT
  );
};

export const handleHelp = async (ctx: BotContext): Promise<void> => {
  if (ctx.chat?.type !== 'private') {
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.');
    return;
  }

  const message = buildHelpMessage(ctx);
  await ctx.reply(message);
};

export const registerHelpCommand = (bot: Telegraf<BotContext>): void => {
  bot.command('help', handleHelp);
};

export const __testing__ = {
  joinLines,
  formatAddressLine,
  buildDeliveryHelp,
  buildTaxiHelp,
  buildOrderHelp,
  buildSupportHelp,
  buildExecutorHelp,
};
